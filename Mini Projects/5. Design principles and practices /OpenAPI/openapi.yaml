openapi: 3.0.1
info:
  version: '1.0.0'
  title: PHOTO API
components:
  schemas:
    Photo:
      type: object
      required:
        - name
        - access
        - location
        - file
        - created_date
        - modified_date
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 30
        description:
          type: string
          maxLength: 200
        access:
          type: string
          enum: [public, private]
        location:
          type: string
        file:
          type: string
        created_date:
          type: string
          format: date-time
        modified_date:
          type: string
          format: date-time
    Photos:
      type: array
      description: An array list of photos
      items:
        $ref: '#/components/schemas/Photo'
    Success:
      type: object
      properties:
        message:
          type: string
        id:
          type: string
    Error:
      type: object
      properties:
        message:
          type: string

paths:
  /photo:
    post:
      description: Post photo
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Photo'
      responses:
        '201':
          description: Is Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /photos:
    get:
      description: Get photos
      parameters:
        - in: query
          name: access
          required: true
          schema:
            type: string
            example: abcd
      responses:
        '200':
          description: Successful pull of photos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Photos'
        '404':
          description: Photo Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /photo/{photo_id}:
    get:
      tags:
        - photo
      summary: Find photo by ID
      description: Get photos with photo id
      operationId: getPhotoById
      parameters:
        - name: photo_id
          in: path
          description: ID of photo that needs to be fetched
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful pull of photo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Photo'
        '404':
          description: Photo Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - photo
      summary: Update photo by ID
      description: Update photos with photo id
      operationId: putPhotoById
      parameters:
        - name: photo_id
          in: path
          description: ID of photo that needs to be updated
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Photo'
      responses:
        '200':
          description: Photo successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '404':
          description: Photo Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - photo
      summary: Delete photo by ID
      description: Deleteing photos with photo id
      operationId: deletePhotoById
      parameters:
        - name: photo_id
          in: path
          description: ID of photo that has to be deleted
          required: true
          schema:
            type: string
      responses:
        '204':
          description: none
        '404':
          description: Photo is Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
